// LAB 01

//03. Escreva uma fun√ß√£o min(x,y) que devolve o menor entre dois n√∫meros. 
//N√£o use fun√ß√µes auxiliares de Math. Utilize corretamente a declara√ß√£o de tipos nos 
//par√¢metros e no resultado da fun√ß√£o. 


function min(x : number, y : number) 
{
    if(x < y)
    {
        return x;
    }
    else
    {
        return y;
    }
}

let teste2 = min(10, 2);
console.log(`O menor n√∫mero √©: ${teste2}.`);


// 04. 4. Escreva uma fun√ß√£o pow(x,y) que calcula o valor de ùë•ùë¶, ou seja, x elevado a pot√™ncia y. 
// Assuma que os valores de x e y s√£o n√∫meros inteiros n√£o negativos e que ùë•0=1 para qualquer valor de x. 
// Apresente uma vers√£o iterativa e uma vers√£o recursiva para a fun√ß√£o. N√£o utilize o operador **. 
// Utilize corretamente a declara√ß√£o de tipos nos par√¢metros e no resultado da fun√ß√£o. 

//vers√£o recursiva
let funcao = Math.pow(2,2);
console.log(funcao);


//vers√£o iterativa
function potencia(base: number, expo: number)
{
    let resultado: number = 1; // tem que ser 1
    for(let i: number =1; i<=expo; i++)
    {
        
        resultado = resultado * base;
        
    }
    return resultado;
}

let teste = potencia(2, 3)
console.log(teste);

// 5. Escreva uma fun√ß√£o toMaiusculaPrimeira(s) que recebe uma string s (assuma qualquer string n√£o vazia) 
// e retorna a mesma string com a primeira letra em mai√∫scula. Utilize corretamente a declara√ß√£o de tipos 
// nos par√¢metros e no resultado da fun√ß√£o. 

function toMaiusculaPrimeira(s : string)
{
    return s.charAt(0).toUpperCase() + s.slice(1);
}

let teste = toMaiusculaPrimeira('cachorro louco'); //s√≥ vai colocar mai√∫scula a primeira letra da primeira palavra
console.log(teste);


// 6. Escreva uma fun√ß√£o getMax(arr) que recebe um array de n√∫mero inteiros e retorna o maior elemento encontrado no array. 
// Assuma que o array n√£o est√° vazio. N√£o utilize fun√ß√µes auxiliares de outros objetos disponibilizados pelo TypeScript. 
// Utilize corretamente a declara√ß√£o de tipos nos par√¢metros e no resultado da fun√ß√£o. 


function getMax(arr: Array<number>) : number
{
    let maiorElemento: number = 0;
    for(let i: number = 0; i<arr.length; i++)
    {
        if(maiorElemento < arr[i])
        {
            maiorElemento = arr[i];
        }
    }
    return maiorElemento;
}

let array1: Array<number> = [3, 4, 19, 13, 2];
let array2: Array<number> = [3, 7, 6, 1, 5];

console.log(getMax(array1));
console.log(getMax(array2));


// 7. Escreva uma fun√ß√£o que, utilizando objetos Map, calcule a frequ√™ncia de cada n√∫mero presente 
//em um determinado array contendo n√∫meros inteiros. Utilize corretamente a declara√ß√£o de tipos 
//nos par√¢metros e no resultado da fun√ß√£o.

function frequencia(map: Map<number, number>, arr: Array<number>) : Map<number, number>
{
    for(var item of arr)
    {
        if(!map.has(item)) //nega√ß√£o, se map n√£o contiver o item
        {
            map.set(item, 1);
        }
        else
        {
            map.set(item, map.get(item) + 1);
        }
    }
    return map;
}

let array1: Array<number> = [1,1,1,2,2,2,3,3,3,4,4,4,5,5,5];
let mapear = new Map<number, number>();

console.log(frequencia(mapear, array1));

